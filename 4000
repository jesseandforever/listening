<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<style>
  body { font-family: Arial, sans-serif; padding: 2rem; }
  #message { margin-bottom: 1rem; }
  #player { width: 100%; height: 344px; border-radius: 24px; }
</style>
<title></title>
<!-- Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-NWJM97ZVQ2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'G-NWJM97ZVQ2');
</script>
</head>
<body>
<div id="message">Detecting your location...</div>
<div id="player-container"></div>

<script>
const albumTitle = "Paradise, destruction";

const locations = [
  {name: "Prospect Park, Brooklyn", lat: 40.660204, lon: -73.968956, radius: 4000},
  {name: "Sheep Meadow, Central Park, Manhattan", lat: 40.771201, lon: -73.974222, radius: 950},
  {name: "Golden Gate Park, San Francisco", lat: 37.769421, lon: -122.486214, radius: 5000},
  {name: "Griffith Park, Los Angeles", lat: 34.136554, lon: -118.294200, radius: 5300},
  {name: "Lincoln Park, Chicago", lat: 41.921438, lon: -87.633549, radius: 2900},
  {name: "Mount Royal Park, Montreal", lat: 45.507024, lon: -73.587256, radius: 4100},
  {name: "Chapultepec Park, Mexico City", lat: 19.420645, lon: -99.181713, radius: 4500},
  {name: "Ipanema Beach, Rio de Janeiro", lat: -22.983333, lon: -43.204722, radius: 850},
  {name: "Tuileries Gardens, Paris", lat: 48.863842, lon: 2.327460, radius: 950},
  {name: "Hyde Park, London", lat: 51.507268, lon: -0.165730, radius: 4000},
  {name: "Park GÃ¼ell, Barcelona", lat: 41.414494, lon: 2.152695, radius: 800},
  {name: "Showa Kinen Park, Tokyo", lat: 35.685223, lon: 139.405360, radius: 5000},
  {name: "Royal Park, Melbourne", lat: -37.7920, lon: 144.9510, radius: 3600},
  {name: "Delta Park, Johannesburg, South Africa", lat: -26.1500, lon: 28.0000, radius: 2200},
];

// Haversine formula to calculate distance in feet between two lat/lon points
function distanceInFeet(lat1, lon1, lat2, lon2) {
  const R = 6371e3; // meters
  const toRad = x => x * Math.PI / 180;
  const dLat = toRad(lat2 - lat1);
  const dLon = toRad(lon2 - lon1);
  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *
            Math.sin(dLon/2) * Math.sin(dLon/2);
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
  const meters = R * c;
  const feet = meters * 3.28084;
  return feet;
}

function getNearestLocation(userLat, userLon) {
  let nearest = null;
  let nearestDist = Infinity;
  for (const loc of locations) {
    const dist = distanceInFeet(userLat, userLon, loc.lat, loc.lon);
    if (dist < loc.radius && dist < nearestDist) {
      nearest = loc;
      nearestDist = dist;
    }
  }
  return nearest;
}

function createPlayer() {
  const iframe = document.createElement("iframe");
  iframe.style.borderRadius = "24px";
  iframe.width = "100%";
  iframe.height = "344";
  iframe.a
